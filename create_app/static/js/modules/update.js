import load from "./load.js";
import save from "./save.js";

function update() {
    let questionContainer = document.querySelector('.questionContainer')
    let questionButtons = document.querySelectorAll('.questionButton')
    let settingButton = document.getElementById('settingButton')
    let TestSettings = document.getElementById('TestSettings')
    let TestQuestion = document.getElementById('TestQuestion')
    let bins = document.querySelectorAll('.trashQuestionMark')
    let bins2 = document.querySelectorAll('.removeButton')
    let number = 0

    // –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–æ–ø—Ä–æ—Å–∞–º–∏
    for (let questionButton of questionButtons) {
        questionButton.addEventListener("click", () => {
            save()
            removeSelect(questionButtons)
            TestSettings.classList.add('hidden')
            TestQuestion.classList.remove('hidden')
            settingButton.classList.remove('select')
            questionButton.classList.add("select")
            load()
        })
    }

    // –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settingButton.addEventListener('click', () => {
        save()
        removeSelect(questionButtons)
        TestSettings.classList.remove('hidden')
        TestQuestion.classList.add('hidden')
        settingButton.classList.add('select')
        load()
    })

    // —É–¥–∞–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
    for (let bin of bins) {
        bin.addEventListener('click', () => {
            bin.closest(".answersBlock").querySelector("#addAnswer").classList.remove("hidden")
            let answers = bin.closest(".answersBlock").querySelectorAll(".questionForTest")
            if (answers.length > 2) {
                bin.parentElement.parentElement.remove()
            }
        })
    }

    // –Ω—É–º–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
    for (let question of questionContainer.querySelectorAll(".questionNumber")) {
        number++
        question.textContent = number
    }

    // —É–¥–∞–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
    for (let bin2 of bins2) {
        bin2.addEventListener('click', () => {
            let parent = bin2.parentElement;

            // –µ—Å–ª–∏ —É–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Üí –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            if (parent.classList.contains("select")) {
                TestSettings.classList.remove('hidden')
                TestQuestion.classList.add('hidden')
                settingButton.classList.add('select')
                load()
            }

            // —É–¥–∞–ª—è–µ–º –∏–∑ localStorage —Å—Ç–∞—Ä—ã–π –∫–ª—é—á
            let oldNum = parent.querySelector('.questionNumber').textContent
            localStorage.removeItem(oldNum)

            // —É–¥–∞–ª—è–µ–º —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
            parent.remove()

            // üîÑ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –∏ localStorage
            renumberQuestionsAndResave()

            // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            save()
        })
    }
}

// —É–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
function removeSelect(questionButtons) {
    for (let questionButton of questionButtons) {
        questionButton.classList.remove("select")
    }
}

// —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω—É–º–µ—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function renumberQuestionsAndResave() {
    let questionContainer = document.querySelector('.questionContainer')
    let number = 0
    let newStorage = {}

    // —Å–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    for (let question of questionContainer.querySelectorAll(".questionButton")) {
        number++
        let numEl = question.querySelector(".questionNumber")
        if (numEl) {
            numEl.textContent = number
            let data = localStorage.getItem(numEl.textContent)
            if (data) {
                newStorage[number] = JSON.parse(data)
            }
        }
    }

    // –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∫–ª—é—á–∏
    Object.keys(localStorage).forEach(key => {
        if (!isNaN(parseInt(key))) {
            localStorage.removeItem(key)
        }
    })

    // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏
    for (let key in newStorage) {
        localStorage.setItem(key, JSON.stringify(newStorage[key]))
    }
}

export default update
